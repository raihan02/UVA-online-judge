#include <bits/stdc++.h>
using namespace std;
vector <int> vc[500000 + 10];
int dis[500000 + 10];
int c;
void dfs_algo(int u)
{
    c++;
    dis[u] = 1;
    for(int i = 0; i < vc[u].size(); i++)
    {
        if(dis[vc[u][i]] == -1)
        {
            dfs_algo(vc[u][i]);
        }
    }
}
int main()
{
    int tes;
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin >> tes;
    while(tes--)
    {
        memset(dis, -1, sizeof dis);
        int m , n;
        cin >> m >> n;
        int a, b;
        for(int i = 0; i < n; i++)
        {
            cin >> a >> b;
            vc[a].push_back(b);
            vc[b].push_back(a);
        }
        int max = 0;
        for(int i = 1; i <= m; i++)
        {
            if(dis[i] == -1)
            {
                c = 0;
                dfs_algo(i);
                if(max < c)
                {
                    max = c;
                }
            }
            vc[i].clear();
            
        }
        cout<<max<<endl;
    }
}
